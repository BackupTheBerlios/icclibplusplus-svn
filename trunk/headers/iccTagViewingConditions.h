#ifndef _H_iccTagViewingConditions_H_#define _H_iccTagViewingConditions_H_#include "iccTag.h"#include "iccDefines.h"#include "iccNumberXYZ.h"ICC_LIB_NAMESPACE_STARTclass iccTagViewingConditions:	public iccTag{public:        									iccTagViewingConditions(void)        									:m_illuminant(),m_surround(),m_illuminantType(0)        									{}        									iccTagViewingConditions(const iccTagViewingConditions& inTag)        									{        										*this = inTag;        									}    virtual									~iccTagViewingConditions(void)        									{}			iccTagViewingConditions&		operator=(const iccTagViewingConditions& inTag);	virtual	iccNumberUInt32					GetSpecifiedTypeSignature(void) const											{            									return iccViewingConditionsType;            								}protected:	virtual	iccError						LoadSelf(std::istream& inStream,unsigned long inSize);	virtual	iccError						SaveSelf(std::ostream& outStream,unsigned long& outSize) const;	virtual	unsigned long					GetSizeSelf(void) const;	virtual	void							InspectSelf(std::vector<iccTagInspector>& outErrorList) const;	virtual	void							AutoCorrectSelf(const std::vector<iccTagInspector>& inErrorList); private:			iccNumberXYZ					m_illuminant;			iccNumberXYZ					m_surround;			iccNumberUInt32					m_illuminantType;};ICC_LIB_NAMESPACE_END#endif//_H_iccTagViewingConditions_H_