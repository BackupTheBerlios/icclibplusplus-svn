#ifndef _H_iccTagText_H_#define _H_iccTagText_H_#include "iccTag.h"#include "iccDefines.h"#include <string>ICC_LIB_NAMESPACE_STARTclass iccTagText:	public iccTag{public:        									iccTagText(void)        									:m_string()        									{}        									iccTagText(const iccTagText& inTag)        									{        										*this = inTag;        									}    virtual									~iccTagText(void)        									{}			iccTagText&						operator=(const iccTagText& inTag);	virtual	iccNumberUInt32					GetSpecifiedTypeSignature(void) const											{            									return iccTextType;            								}	const	std::string&					GetString(void) const											{            									return m_string;            								}	protected:	virtual	iccError						LoadSelf(std::istream& inStream,unsigned long inSize);	virtual	iccError						SaveSelf(std::ostream& outStream,unsigned long& outSize) const;	virtual	unsigned long					GetSizeSelf(void) const;	virtual	void							InspectSelf(std::vector<iccTagInspector>& outErrorList) const;	virtual	void							AutoCorrectSelf(const std::vector<iccTagInspector>& inErrorList); private:			std::string						m_string;};ICC_LIB_NAMESPACE_END#endif//_H_iccTagText_H_